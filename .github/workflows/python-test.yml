# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
env:
  PYTHON_VERSION: 3.8

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master, develop ]

jobs:
  Linter:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Setup Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Cache poetry lock
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
    - run: poetry install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. 
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=139 --statistics
  
  Test:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install wkthtmltopdf
      run: |
        sudo apt-get install xvfb libfontconfig wkhtmltopdf
    - name: Setup Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Cache poetry lock
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
    - run: poetry install
    - name: Test with pytest
      run: |
        poetry run python -m pytest
